<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="fa" dir="rtl">

<head>
    <meta charset="UTF-8" />
    <title>متغیرها و انواع داده‌ای ساده</title>
    <meta name="description" content="وب‌سایت قاسم کیانی مقدم" />
    <meta name="keywords" content="قاسم کیانی مقدم, وب‌سایت, وب‌سایت قاسم کیانی مقدم, کتاب, فارسی, کتاب فارسی, ترجمه, برنامه‌نویسی, جاوا, جاوا اسکریپت, پزشکی, طب اطفال" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" crossorigin="anonymous" href="https://cdn.rtlcss.com/bootstrap/v4.0.0/css/bootstrap.min.css" integrity="sha384-P4uhUIGk/q1gaD/NdgkBIl3a6QywJjlsFJFk7SPRdruoGddvRVSwv5qFnvZ73cpz" />
    <link rel="stylesheet" crossorigin="anonymous" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" />
    <link rel="icon" type="image/x-icon" href="../../../favicon.ico" />
    <style type="text/css">
        @import url(https://fonts.googleapis.com/css?family=Droid%20Sans);
        @import url(https://fonts.googleapis.com/css?family=Droid%20Serif);
        @import url(https://fonts.googleapis.com/css?family=Droid%20Arabic%20Kufi);
        @import url(https://fonts.googleapis.com/css?family=Droid%20Arabic%20Naskh);

        html,
        body,
        input,
        textarea,
        select,
        option,
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            font-family: Droid Arabic Naskh, Droid Serif;
        }

        nav,
        .nav {
            font-family: Droid Arabic Kufi, Droid Sans;
        }

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            font-family: Droid Arabic Naskh, Droid Serif;
        }

        #footer {
            margin-top: 0.5rem;
            padding-top: 0.5rem;
            border-top: #eeeeee solid thick;
        }
    </style>
    <style>
        @import url(https://fonts.googleapis.com/css?family=Courier+Prime);

        div.row.pager {
            margin-top: 0.5em;
            padding: 0.5em 0;
            border-top: solid #cccccc 2px;
            background-color: #dddddd;
        }

        div.pager-prev {}

        div.pager-title {}

        div.pager-next {}
    </style>
    <link rel="stylesheet" type="text/css" href="styles.css" />
    <style type="text/css"></style>
</head>

<body style="min-height: 75rem;">
    <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
        <div class="container"><a class="navbar-brand" href="../../../">وب‌سایت قاسم کیانی مقدم</a><button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#divNavBarToggle" aria-controls="divNavBarToggle" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
            <div id="divNavBarToggle" class="collapse navbar-collapse">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active"><a class="nav-link" href="../../">کتاب‌ها<span class="sr-only"> (current)</span></a></li>
                    <li class="nav-item"><a class="nav-link" href="../../../essays/">مقالات</a></li>
                    <li class="nav-item"><a class="nav-link" href="../../../translation/">ترجمه</a></li>
                    <li class="nav-item"><a class="nav-link" href="../../../about/">درباره</a></li>
                    <li class="nav-item"><a class="nav-link" href="../../../contact/">تماس</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container">
        <div class="row">
            <main class="col-md-10 order-md-last">
                <div class="ch" id="ch02">
                    <h2 class="ch-title"><a class="bkmk" name="ch02"></a><a class="rtoc" href="c06-toc.xhtml"><span class="ch-title-num">۲</span><br /><span class="ch-title-text">متغیرها و انواع داده‌ای ساده</span></a></h2><img style="float:   right; margin-left:  0.5em; margin-bottom: 0.25em;" alt="تصویر ابتدای فصل" src="images/ch.svg" />
                    <a id="p015"></a>
                    <p>در این فصل، با انواع مختلف داده‌ها که در برنامه‌های پایتون می‌توانید با آن‌ها کار کنید، آشنا می‌شوید. هم‌چنین، یاد می‌گیرید که چگونه در برنامه‌هایتان از متغیرها برای نمایش داده‌ها استفاده کنید.</p>
                    <div class="sect" id="ch02lev1sec1"><a class="bkmk" name="ch02lev1sec1"></a>
                        <h3>هنگام اجرای <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> واقعاً چه اتفاقی می‌افتد</h3>
                        <p>اجازه بدهید که در اینجا دقیق‌تر نگاه کنیم ببینیم وقتی <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> را اجرا می‌کنید، پایتون چکار می‌کند. در واقع، حتی وقتی برنامه‌ی ساده‌ای را اجرا می‌کنید، پایتون مقدار زیادی کار انجام می‌دهد.</p>
                        <div class="snippet">
                            <div class="snippet-title" dir="ltr">hello_world.py</div>
                            <pre class="snippet" dir="ltr">print("Hello Python world!")</pre>
                        </div>
                        <p>وقتی این کد را اجرا کنید، باید خروجی زیر را ببینید:</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Hello Python world!</pre>
                        </div><a id="p016"></a>
                        <p>وقتی فایل <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> را اجرا می‌کنید، پسوند <span class="rlm">‏</span><span class="ident" dir="ltr">.py</span><span class="rlm">‏</span> نشان می‌دهد که این فایل یک برنامه‌ی پایتون است. ویرایشگر شما این فایل را به <span class="emphasis">تفسیرگر پایتون</span> می‌دهد، و تفسیرگر برنامه را می‌خواند و بررسی می‌کند ببیند هر کدام از کلمات برنامه چه معنایی دارد. مثلاً وقتی تفسیرگر کلمه‌ی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">print</span><span class="rlm">‏</span> و به دنبال آن پرانتزها را می‌بیند، چیزی را که داخل پرانتز است، روی نمایشگر نمایش می‌دهد.</p>
                        <p>وقتی که برنامه را می‌نویسید، ویرایشگر شما بخش‌های مختلف برنامه را به طرق متفاوتی برجسته می‌کند. مثلاً اینکه می‌فهمد که <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">print()</span><span class="rlm">‏</span> نام یک تابع است و آن کلمه را به‌صورت رنگی نشان می‌دهد. یا اینکه می‌فهمد که <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"Hello Python world!"</span><span class="rlm">‏</span> کد پایتون نیست و آن عبارت را با رنگ متفاوتی نشان می‌دهد. به این قابلیت، <span class="emphasis">برجسته‌سازی نحوی</span> (<span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">syntax highlighting</span><span class="rlm">‏</span></span>) می‌گویند، و برای برنامه‌نویسی بسیار مفید است.</p>
                    </div>
                    <div class="sect" id="ch02lev1sec2"><a class="bkmk" name="ch02lev1sec2"></a>
                        <h3>متغیرها</h3>
                        <p>در اینجا می‌خواهیم در برنامه‌ی <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> از متغیر استفاده کنیم. سطر جدیدی را به اول فایل اضافه کنید و سطر دوم را به این صورت تغییر دهید:</p>
                        <div class="snippet">
                            <div class="snippet-title" dir="ltr">hello_world.py</div>
                            <pre class="snippet" dir="ltr">message = "Hello Python world!"
print(message)</pre>
                        </div>
                        <p>این برنامه را اجرا کنید ببینید چه می‌شود. باید همان خروجی قبل را ببینید:</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Hello Python world!</pre>
                        </div>
                        <p>در اینجا یک <span class="emphasis">متغیر</span> به نام <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">message</span><span class="rlm">‏</span> اضافه کرده‌ایم. هر متغیر با یک <span class="emphasis">مقدار</span> در ارتباط است، یعنی اطلاعاتی که در آن متغیر ذخیره می‌شود. در این مورد، مقدار مورد نظر، عبارت <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"Hello Python world!"</span><span class="rlm">‏</span> است.</p>
                        <p>اضافه کردن متغیر کار تفسیرگر پایتون را کمی بیشتر می‌کند. وقتی که تفسیرگر سطر اول را می‌بیند، متغیر <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">message</span><span class="rlm">‏</span> را با متن <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"Hello Python world!"</span><span class="rlm">‏</span> ارتباط می‌دهد. وقتی که به سطر دوم می‌رسد، مقدار مرتبط با <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">message</span><span class="rlm">‏</span> را روی صفحه نمایش می‌دهد.</p>
                        <p>حالا می‌خواهیم برنامه‌ی <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> را گسترش دهیم تا پیغام دیگری را نیز نمایش دهد. یک سطر خالی به <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> اضافه کنید، و سپس دو سطر کد زیر را نیز به آن بیفزایید:</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr"><span class="ash">message = "Hello Python world!"</span>
<span class="ash">print(message)</span>

message = "Hello Python Crash Course world!"
print(message)</pre>
                        </div>
                        <p>حالا وقتی که <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> را اجرا می‌کنید، باید دو سطر خروجی ببینید:</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Hello Python world!
Hello Python Crash Course world!</pre>
                        </div><a id="p017"></a>
                        <p>می‌توانید مقدار متغیر را در برنامه‌تان به هر چیزی تغییر دهید، و پایتون همیشه مقدار کنونی آن را نمایش خواهد داد.</p>
                        <div class="sect" id="ch02lev2sec1"><a class="bkmk" name="ch02lev2sec1"></a>
                            <h4>نام‌گذاری و استفاده از متغیرها</h4>
                            <p>زمانی که در پایتون از متغیر استفاده می‌کنید، باید یک سری مقررات و دستورالعمل‌ها را رعایت کنید. عدم رعایت برخی از این مقررات موجب بروز خطا می‌شود؛ برخی دیگر از این دستورالعمل‌ها صرفاً برای آن است که خواندن و فهمیدن کد شما آسان‌تر باشد. مقررات زیر را درباره‌ی متغیرها حتماً در ذهن داشته باشید:</p>
                            <ul>
                                <li>نام متغیرها فقط می‌تواند حاوی حروف، اعداد، و زیرخط (<span class="rlm">‏</span><span class="lr" dir="ltr">underscore</span><span class="rlm">‏</span>) باشد. نام متغیر می‌تواند با حرف یا زیرخط شروع شود، ولی با عدد نه. مثلاً می‌توانید نام یک متغیر را <span class="rlm">‏</span><span class="ident" dir="ltr">message_1</span><span class="rlm">‏</span> بگذارید، ولی <span class="rlm">‏</span><span class="ident" dir="ltr">1_message</span><span class="rlm">‏</span> نه.</li>
                                <li>استفاده از فاصله (<span class="rlm">‏</span><span class="lr" dir="ltr">space</span><span class="rlm">‏</span>) در نام متغیر مجاز نیست، ولی می‌توان برای جدا کردن کلمات در نام متغیر از زیرخط استفاده کرد. به‌عنوان مثال، <span class="rlm">‏</span><span class="ident" dir="ltr">greeting_message</span><span class="rlm">‏</span> قابل قبول است، ولی <span class="rlm">‏</span><span class="ident" dir="ltr">greeting message</span><span class="rlm">‏</span> موجب بروز خطا می‌شود.</li>
                                <li>از به‌کارگیری کلیدواژه‌ها و نام توابع پایتون به‌عنوان نام متغیر خودداری کنید؛ یعنی از کلماتی که پایتون برای مقاصد خاص برنامه‌نویسی رزرو کرده است، استفاده نکنید، مانند کلمه‌ی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">print</span><span class="rlm">‏</span> (رک. <refId xmlns="urn:dox:pycc">app۰۱lev۱sec۴</refId>).</li>
                                <li>نام متغیرها بهتر است کوتاه ولی معنی‌دار باشد. مثلاً <span class="rlm">‏</span><span class="ident" dir="ltr">name</span><span class="rlm">‏</span> بهتر از <span class="rlm">‏</span><span class="ident" dir="ltr">n</span><span class="rlm">‏</span> است، <span class="rlm">‏</span><span class="ident" dir="ltr">student_name</span><span class="rlm">‏</span> بهتر از <span class="rlm">‏</span><span class="ident" dir="ltr">s_n</span><span class="rlm">‏</span> است، و <span class="rlm">‏</span><span class="ident" dir="ltr">name_length</span><span class="rlm">‏</span> بهتر از <span class="rlm">‏</span><span class="ident" dir="ltr">length_of_persons_name</span><span class="rlm">‏</span> است.</li>
                                <li>هنگام استفاده از حرف کوچک <span class="rlm">‏</span><span class="ident" dir="ltr">l</span><span class="rlm">‏</span> و حرف بزرگ <span class="rlm">‏</span><span class="ident" dir="ltr">O</span><span class="rlm">‏</span> دقت کنید، چرا که این‌ها ممکن است با ارقام <span class="rlm">‏</span><span class="ident" dir="ltr">1</span><span class="rlm">‏</span> و <span class="rlm">‏</span><span class="ident" dir="ltr">0</span><span class="rlm">‏</span> اشتباه شوند.</li>
                            </ul>
                            <p>انتخاب نام‌های خوب برای متغیرها کاری است که به کمی تمرین نیاز دارد، خصوصاً زمانی که بخواهید برنامه‌های جالب‌تر و پیچیده‌تری بنویسید. هر چه برنامه‌های بیشتری بنویسید و کدهای دیگران را بیشتر بخوانید، پیدا کردن نام‌های معنی‌دار برای متغیرها برایتان آسان‌تر خواهد شد.</p>
                            <div class="note">
                                <h6 class="note-title">توجه</h6>
                                <p>متغیرهای پایتون که فعلاً استفاده می‌کنید، باید با حروف کوچک باشند. البته اگر از حروف بزرگ هم استفاده کنید، خطایی ایجاد نمی‌شود، ولی متغیرهایی که با حروف بزرگ نوشته می‌شوند، معنای خاصی دارند که بعد در فصل‌های بعد درباره‌ی آن‌ها صحبت خواهیم کرد.</p>
                            </div>
                        </div>
                        <div class="sect" id="ch02lev2sec2"><a class="bkmk" name="ch02lev2sec2"></a>
                            <h4>اجتناب از خطاهای مربوط به نام متغیرها</h4>
                            <p>معمولاً هر برنامه‌نویسی اشتباهاتی می‌کند، و شاید بتوان گفت که اکثر برنامه‌نویسان هر روز اشتباه دارند. برنامه‌نویسان خوب گرچه اشتباه می‌کنند، ولی می‌دانند چگونه به‌صورت مؤثری با این اشتباهات روبه‌رو شوند. در اینجا، نگاهی می‌اندازیم به یک خطا که ممکن است در همان اوایل برای شما بروز کند، و راه اصلاح آن را یاد می‌گیریم.</p>
                            <p>در اینجا برنامه‌ای می‌نویسیم که عمداً در آن خطا وجود دارد. کد زیر را تایپ کنید، و دقت کنید که کلمه‌ی <span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">mesage</span><span class="rlm">‏</span></span> که با حروف پررنگ نشان داده شده است، غلط املایی دارد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">message = "Hello Python Crash Course reader!"
print(<span class="bo">mesage</span>)</pre>
                            </div><a id="p018"></a>
                            <p>وقتی که خطایی در برنامه‌ی شما بروز می‌کند، تفسیرگر پایتون تلاش می‌کند به شما کمک کند که بفهمید مشکل در کجا است. وقتی که برنامه نمی‌تواند با موفقیت انجام شود، تفسیرگر رهگیری خطا ارائه می‌کند. <span class="emphasis">رهگیری خطا</span> (<span class="rlm">‏</span><span class="lr" dir="ltr"><span class="emphasis">traceback</span></span><span class="rlm">‏</span>) مشخص می‌کند که تفسیرگر هنگام اجرای برنامه‌ی شما در کجا به مشکل برخورده است. مثلاً وقتی که نام متغیر را با املای غلط می‌نویسید، پایتون به‌صورت زیر، رهگیری خطا ارائه می‌کند:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">Traceback (most recent call last):
<span class="n" dir="ltr">1</span>  File "hello_world.py", line 2, in &lt;module&gt;
<span class="n" dir="ltr">2</span>    print(mesage)
<span class="n" dir="ltr">3</span>NameError: name 'mesage' is not defined</pre>
                            </div>
                            <p>در این خروجی، قسمت <span class="n" dir="ltr">1</span> گزارش می‌کند که خطایی در سطر ۲ فایل <span class="rlm">‏</span><span class="ident" dir="ltr">hello_world.py</span><span class="rlm">‏</span> بروز کرده است. تفسیرگر این سطر را نشان می‌دهد <span class="n" dir="ltr">2</span> تا سریع‌تر بتوانیم محل خطا را مشخص کنیم، و به ما می‌گوید که چه نوع خطایی پیدا کرده است <span class="n" dir="ltr">3</span>. در این مورد، خطایی که پیدا کرده، یک <span class="emphasis">خطای نام</span> است، و گزارش می‌کند که متغیر استفاده شده، یعنی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">mesage</span><span class="rlm">‏</span>، پیدا نمی‌شود. پایتون قادر به شناسایی نام متغیر داده‌شده نیست. خطای نام معمولاً بدان معنا است که یا ما یادمان رفته که قبل از استفاده از متغیر، به آن مقدار اختصاص دهیم، یا اینکه در نوشتن نام متغیر، مرتکب غلط املایی شده‌ایم.</p>
                            <p>البته ما در این مثال یک حرف <span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">s</span><span class="rlm">‏</span></span> را در نام متغیر <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">message</span><span class="rlm">‏</span> در سطر دوم جا انداخته بودیم. تفسیرگر پایتون کد شما را از نظر املایی غلط‌گیری نمی‌کند، بلکه کنترل می‌کند که نام متغیرها همه جا یکسان نوشته شده باشد. مثلاً ببینید که اگر املای <span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">message</span><span class="rlm">‏</span></span> را در جای دیگری از کد هم غلط بنویسیم، چه اتفاقی می‌افتد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">mesage = "Hello Python Crash Course reader!"
<span class="ash">print(mesage)</span></pre>
                            </div>
                            <p>در این مثال، برنامه درست اجرا می‌شود!</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">Hello Python Crash Course reader!</pre>
                            </div>
                            <p>زبان‌های برنامه‌نویسی دقت بالایی دارند، ولی اهمیتی به املای درست یا غلط نمی‌دهند. در نتیجه، برای انتخاب نام متغیر و کدنویسی، نیازی نیست که قواعد املا و دستور زبان انگلیسی را در نظر بگیرید.</p>
                            <p>بسیاری از خطاهای برنامه‌نویسی، خطاهایی تک‌حرفی در یک سطر از برنامه هستند. اگر وقت زیادی را صرف یافتن یکی از این نوع خطاها می‌کنید، اصلاً نگران نباشید. خیلی از برنامه‌نویسان باتجربه و بااستعداد هم ساعت‌ها وقت خود را صرف پیدا کردن این نوع خطاها می‌کنند. اصلاً جدی نگیرید و کارتان را ادامه بدهید، و بدانید که این مسائل در طول زندگی حرفه‌ای شما به‌عنوان برنامه‌نویس زیاد اتفاق خواهد افتاد.</p>
                        </div>
                        <div class="sect" id="ch02lev2sec3"><a class="bkmk" name="ch02lev2sec3"></a>
                            <h4>متغیر مانند برچسب است</h4>
                            <p>معمولاً متغیرها را مانند جعبه‌ای در نظر می‌گیرند که مقادیر را در آن ذخیره می‌کنید. این طرز فکر ممکن است دفعات اولی که از متغیرها استفاده می‌کنید، مفید باشد، ولی روش دقیقی برای توصیف چگونگی بازنمایی متغیرها در پایتون نیست. بهتر است متغیرها را مانند برچسب‌هایی در نظر بگیرید که می‌توانید به آن‌ها مقدار اختصاص دهید. یا اینکه می‌توان گفت که متغیر به یک مقدار خاص اشاره می‌کند.</p><a id="p019"></a>
                            <p>شاید این تمایز در برنامه‌های ابتدایی شما خیلی مهم نباشد، ولی بهتر است همین اول آن را یاد بگیرید. بعداً ممکن است رفتاری غیرمنتظره را از متغیرها ببینید، و آنجا است که درک صحیح طرز کار متغیرها به فهمیدن علت آن کمک خواهد کرد.</p>
                            <div class="note">
                                <h6 class="note-title">توجه</h6>
                                <p>بهترین راه برای فهمیدن مفاهیم جدید برنامه‌نویسی، این است که سعی کنید در برنامه‌هایتان از آن‌ها استفاده کنید. اگر در یکی از تمرینات این کتاب با مشکل روبه‌رو شدید، سعی کنید مدتی به کار دیگری بپردازید. بعد اگر هنوز هم مشکل داشتید، بخش مربوطه‌ی کتاب را مرور کنید. سپس اگر باز هم به کمک نیاز داشتید، به پیشنهادات ارائه شده در <span class="ref"><a href="c39-appc.xhtml">ضمیمه‌ی پ</a></span> مراجعه کنید.</p>
                            </div>
                        </div>
                        <div class="sidebar">
                            <h6 class="sidebar-title">خودتان امتحان کنید</h6>
                            <p>برای انجام هر کدام از تمرین‌های زیر، یک برنامه‌ی جدا بنویسید. هر برنامه را با نام فایلی که مطابق با قراردادهای استاندارد پایتون باشد، ذخیره کنید. یعنی از حروف کوچک و زیرخط استفاده کنید، مانند <span class="rlm">‏</span><span class="ident" dir="ltr">simple_message.py</span><span class="rlm">‏</span> و <span class="rlm">‏</span><span class="ident" dir="ltr">simple_messages.py</span><span class="rlm">‏</span>.</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy01"><span class="tiy-num">۲-۱</span>. <span class="tiy-title">پیام ساده</span>: </span>یک پیام را به یک متغیر اختصاص دهید و سپس آن پیام را نمایش دهید.</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy02"><span class="tiy-num">۲-۲</span>. <span class="tiy-title">پیام‌های ساده</span>: </span> پیامی را به یک متغیر اختصاص دهید، و آن پیام را نمایش دهید. سپس مقدار متغیر را به پیام جدیدی تغییر دهید، و پیام جدید را نمایش دهید.</p>
                        </div>
                    </div>
                    <div class="sect" id="ch02lev1sec3"><a class="bkmk" name="ch02lev1sec3"></a>
                        <h3>رشته‌ها</h3>
                        <p>از آنجا که اکثر برنامه‌ها معمولاً داده‌هایی را تعریف و جمع‌آوری می‌کنند و بعد بر روی آن کارهایی را انجام می‌دهند، لذا بهتر است انواع مختلف داده‌ها را طبقه‌بندی کنیم. اولین نوعی که بررسی می‌کنیم، رشته است. رشته در نگاه اول بسیار ساده است، ولی به طرق مختلفی می‌توان از آن استفاده کرد.</p>
                        <p><span class="emphasis">رشته</span> به معنای دنباله‌ای از نویسه‌ها است. هر چیزی که داخل علامت نقل‌قول نوشته می‌شود، در پایتون رشته محسوب می‌شود، و می‌توانید برای رشته از نقل‌قول دوتایی یا یکه استفاده کنید:</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">"This is a string."
'This is also a string.'</pre>
                        </div>
                        <p>این انعطاف‌پذیری به شما امکان می‌دهد که از علامت نقل‌قول و آپوستروف در داخل رشته‌هایتان استفاده کنید:</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">'I told my friend, "Python is my favorite language!"'
"The language 'Python' is named after Monty Python, not the snake."
"One of Python's strengths is its diverse and supportive community."</pre>
                        </div>
                        <p>برخی از راه‌های مختلف استفاده از رشته را در اینجا بررسی می‌کنیم.</p>
                        <div class="sect" id="ch02lev2sec4"><a class="bkmk" name="ch02lev2sec4"></a>
                            <h4>تغییر دادن حالت حروف کوچک یا بزرگ رشته با استفاده از متدها</h4>
                            <p>یکی از ساده‌ترین کارهایی که با یک رشته می‌توان انجام داد، تغییر دادن وضعیت کوچک یا بزرگ بودن حروف آن است. به کد زیر نگاه کنید و سعی کنید بفهمید چه کاری انجام می‌دهد:</p>
                            <div class="snippet">
                                <div class="snippet-title" dir="ltr">name.py</div>
                                <pre class="snippet" dir="ltr">name = "ada lovelace"
print(name.title())
</pre>
                            </div>
                            <p>فایل را با نام <span class="rlm">‏</span><span class="ident" dir="ltr">name.py</span><span class="rlm">‏</span> ذخیره کنید و سپس آن را اجرا کنید. باید خروجی زیر را ببینید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">Ada Lovelace</pre>
                            </div>
                            <p>در این مثال، متغیر <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">name</span><span class="rlm">‏</span> به رشته‌ی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"ada lovelace"</span><span class="rlm">‏</span> اشاره می‌کند که با حروف کوچک نوشته شده است. متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">title()</span><span class="rlm">‏</span> پس از متغیر در داخل فراخوانی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">print()</span><span class="rlm">‏</span> آمده است. <span class="emphasis">متد</span> عملی است که پایتون می‌تواند روی یک قطعه‌ی داده‌ها انجام دهد. نقطه (<span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">.</span><span class="rlm">‏</span>) به دنبال <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">name</span><span class="rlm">‏</span> در <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">name.title()</span><span class="rlm">‏</span> به پایتون می‌گوید که عمل متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">title()</span><span class="rlm">‏</span> را روی متغیر <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">name</span><span class="rlm">‏</span> انجام دهد. به دنبال متد، پرانتز قرار می‌گیرد، زیرا غالباً متد برای انجام کار خود نیاز به اطلاعات اضافی دارد. این اطلاعات در داخل پرانتز به آن داده می‌شود. تابع <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">title()</span><span class="rlm">‏</span> نیازی به اطلاعات اضافی ندارد، بنابراین، پرانتزهای آن خالی هستند.</p>
                            <p>متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">title()</span><span class="rlm">‏</span> حالت هر کلمه از نظر حروف کوچک و بزرگ را به حالت عنوان تبدیل می‌کند، یعنی حرف اول کلمه را بزرگ می‌کند. این کار مفیدی است، چون خیلی وقت‌ها لازم است که برنامه‌ی شما یک نام را به‌عنوان نوعی اطلاعات در نظر بگیرد. مثلاً شاید لازم باشد که برنامه‌ی شما، مقادیر ورودی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">Ada</span><span class="rlm">‏</span> و <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">ADA</span><span class="rlm">‏</span> را به‌عنوان یک نام یکسان در نظر بگیرد، و همه‌ی آن‌ها را به‌صورت <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">ada</span><span class="rlm">‏</span> نمایش بدهد.</p>
                            <p>چندین متد مفید دیگر نیز برای تغییر دادن حالت کوچک و بزرگ بودن حروف در دسترس هستند. مثلاً می‌توانید تمام رشته را به حروف بزرگ یا حروف کوچک تبدیل کنید، به این صورت:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">name = "Ada Lovelace"
print(name.upper())
print(name.lower())</pre>
                            </div>
                            <p>این برنامه خروجی زیر را نمایش می‌دهد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">ADA LOVELACE
ada lovelace</pre>
                            </div>
                            <p>متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">lower()</span><span class="rlm">‏</span> خصوصاً برای ذخیره‌سازی داده‌ها مفید است. خیلی وقت‌ها بهتر است به حروف کوچک و بزرگی که کاربران وارد می‌کنند، اعتماد نکنید، بنابراین، می‌توانید قبل از ذخیره کردن داده‌ها، آن‌ها را به حروف کوچک تبدیل کنید. بعد وقتی که می‌خواهید اطلاعات را نمایش دهید، حروف کوچک و بزرگ را به صورتی که مناسب‌تر باشد، تبدیل می‌کنید:</p>
                        </div>
                        <div class="sect" id="ch02lev2sec5"><a class="bkmk" name="ch02lev2sec5"></a>
                            <h4>استفاده از متغیر در رشته‌ها</h4>
                            <p>در برخی موقعیت‌ها، ممکن است بخواهید که از مقدار یک متغیر در داخل یک رشته استفاده کنید. مثلاً شاید دو متغیر داشته باشید که به‌ترتیب نشان‌دهنده‌ی نام و نام خانوادگی باشند، و بعد بخواهید که با ترکیب آن‌ها، نام کامل یک شخص را نمایش دهید:</p>
                            <div class="snippet">
                                <div class="snippet-title" dir="ltr">full_name.py</div>
                                <pre class="snippet" dir="ltr">first_name = "ada"
last_name = "lovelace"
<span class="n" dir="ltr">1</span>full_name = f"{first_name} {last_name}"
print(full_name)</pre>
                            </div>
                            <p>برای اینکه مقدار یک متغیر را در رشته وارد کنید، حرف <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">f</span><span class="rlm">‏</span> را درست قبل از علامت نقل‌قول اول قرار دهید <span class="n" dir="ltr">1</span>. سپس نام متغیری را که می‌خواهید در داخل رشته استفاده کنید، داخل آکلاد بنویسید. پایتون هنگام نمایش رشته، هر متغیر را با مقدار آن جایگزین خواهد کرد.</p>
                            <p>به این رشته‌ها، <span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">f-string</span><span class="rlm">‏</span></span> گفته می‌شود. این <span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">f</span><span class="rlm">‏</span></span> مخفف <span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">format</span><span class="rlm">‏</span></span> است، زیرا پایتون رشته را با جایگزینی نام متغیر داخل آکلاد با مقدار آن، فرمت می‌کند. خروجی کد بالا به‌صورت زیر است:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">ada lovelace</pre>
                            </div>
                            <p>با این <span class="rlm">‏</span><span class="lr" dir="ltr">f</span><span class="rlm">‏</span>-رشته‌ها کارهای زیادی می‌توانید انجام دهید. به‌عنوان مثال، می‌توانید از <span class="rlm">‏</span><span class="lr" dir="ltr">f</span><span class="rlm">‏</span>-رشته‌ها برای ایجاد یک پیام کامل با استفاده از اطلاعات یک متغیر استفاده کنید، مثلاً به‌صورت زیر:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr"><span class="ash">first_name = "ada"</span>
<span class="ash">last_name = "lovelace"</span>
<span class="ash">full_name = f"{first_name} {last_name}"</span>
<span class="n" dir="ltr">1</span>print(f"Hello, {full_name.title()}!")
</pre>
                            </div>
                            <p>نام کامل در جمله‌ای که به کاربر سلام می‌کند، استفاده شده است <span class="n" dir="ltr">1</span>، و با استفاده از متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">title()</span><span class="rlm">‏</span> از نظر حروف کوچک و بزرگ به حالت عنوان تبدیل شده است. این کد خوشامدگویی ساده‌ای را نمایش می‌دهد که به روش مناسبی فرمت شده است:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">Hello, Ada Lovelace!</pre>
                            </div>
                            <p>هم‌چنین، می‌توانید با استفاده از <span class="rlm">‏</span><span class="lr" dir="ltr">f</span><span class="rlm">‏</span>-رشته‌ها پیامی را ایجاد کنید و سپس آن را به یک متغیر اختصاص دهید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr"><span class="ash">first_name = "ada"</span>
<span class="ash">last_name = "lovelace"</span>
<span class="ash">full_name = f"{first_name} {last_name}"</span>
<span class="n" dir="ltr">1</span>message = f"Hello, {full_name.title()}!"
<span class="n" dir="ltr">2</span>print(message)</pre>
                            </div>
                            <p>این کد نیز پیام <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">Hello, Ada Lovelace!</span><span class="rlm">‏</span> را نمایش می‌دهد، ولی با اختصاص دادن پیام به یک متغیر <span class="n" dir="ltr">1</span>، فراخوانی نهایی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">print()</span><span class="rlm">‏</span> خیلی ساده‌تر می‌شود <span class="n" dir="ltr">2</span>.</p><a id="p022"></a>
                            <div class="note">
                                <h6 class="note-title">توجه</h6>
                                <p><span class="rlm">‏</span><span class="lr" dir="ltr">f</span><span class="rlm">‏</span>-رشته‌ها نخستین بار در پایتون ۳.۶ ارائه شدند. اگر از پایتون ۳.۵ یا قبل از آن استفاده می‌کنید، باید به جای دستور نحوی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">f</span><span class="rlm">‏</span> از متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">format()</span><span class="rlm">‏</span> استفاده کنید. برای استفاده از <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">format()</span><span class="rlm">‏</span>، پس از نوشتن <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">format</span><span class="rlm">‏</span> لیست متغیرهایی را که می‌خواهید استفاده کنید، داخل پرانتز بنویسید. هر متغیر با یک جفت آکلاد مشخص می‌شود؛ مقادیر داده شده در داخل پرانتز به‌ترتیب جایگزین آکلادها می‌شود:</p>
                                <div class="snippet">
                                    <pre class="snippet" dir="ltr">full_name = "{} {}".format(first_name, last_name)</pre>
                                </div>
                            </div>
                        </div>
                        <div class="sect" id="ch02lev2sec6"><a class="bkmk" name="ch02lev2sec6"></a>
                            <h4>افزودن فضای سفید به رشته‌ها با استفاده از تَب یا سر سطر</h4>
                            <p>در برنامه‌نویسی، <span class="emphasis">فضای سفید</span> به هرگونه نویسه‌ی چاپ‌نشدنی گفته می‌شود، از قبیل نمادهای فاصله (<span class="rlm">‏</span><span class="lr" dir="ltr">space</span><span class="rlm">‏</span>)، جهش یا تَب (<span class="rlm">‏</span><span class="lr" dir="ltr">tab</span><span class="rlm">‏</span>)، و پایان سطر (<span class="rlm">‏</span><span class="lr" dir="ltr">end of line</span><span class="rlm">‏</span>). می‌توانید از فضای سفید برای مرتب کردن خروجی برنامه استفاده کنید، تا راحت‌تر قابل‌خواندن باشد.</p>
                            <p>برای افزودن یک تب به متن خود، از ترکیب نویسه‌ای <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">\t</span><span class="rlm">‏</span> استفاده کنید، به‌صورتی که در <span class="n" dir="ltr">1</span> نشان داده شده است:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">print("Python")</span>
Python
<span class="n" dir="ltr">1</span>&gt;&gt;&gt; <span class="bo">print("\tPython")</span>
    Python</pre>
                            </div>
                            <p>برای افزودن سطر جدید به یک رشته، از ترکیب نویسه‌ای <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">\n</span><span class="rlm">‏</span> استفاده کنید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">print("Languages:\nPython\nC\nJavaScript")</span>
Languages:
Python
C
JavaScript</pre>
                            </div>
                            <p>از ترکیب تب و سطر جدید هم می‌توانید در یک رشته استفاده کنید. رشته‌ی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"\n\t"</span><span class="rlm">‏</span> به پایتون می‌گوید که به سر سطر برود و سطر بعد را با یک تب شروع کند. مثال زیر نشان می‌دهد که چگونه می‌توانید از یک رشته‌ی یک‌سطری برای ایجاد چهار سطر خروجی استفاده کنید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">print("Languages:\n\tPython\n\tC\n\tJavaScript")</span>
Languages:
    Python
    C
    JavaScript</pre>
                            </div>
                            <p>نویسه‌های سر سطر و تب در دو فصل بعدی خیلی مفید خواهد بود و به شما امکان خواهد داد که فقط با یکی دو سطر کد، چندین سطر خروجی ایجاد کنید.</p>
                        </div>
                        <div class="sect" id="ch02lev2sec7"><a class="bkmk" name="ch02lev2sec7"></a>
                            <h4>حذف فضای سفید</h4>
                            <p>فضای سفید اضافه در برنامه‌ها ممکن است موجب سردرگمی شود. از نظر برنامه‌نویسان، <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">'python'</span><span class="rlm">‏</span> و <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">'python '</span><span class="rlm">‏</span> تقریباً یکسان به نظر می‌رسند. ولی از نظر برنامه، دو رشته‌ی متفاوت هستند. پایتون فاصله‌ی اضافه در <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">'python '</span><span class="rlm">‏</span> را می‌بیند و آن را معنی‌دار در نظر می‌گیرد، مگر آنکه شما خودتان خلاف این را به آن بگویید.</p><a id="p023"></a>
                            <p>در نظر گرفتن فضای سفید اهمیت زیادی دارد، زیرا خیلی از وقت‌ها لازم است که دو رشته را مقایسه کنید و ببینید یکسان هستند یا نه. مثلاً یک نمونه‌ی مهم آن، وارسی کردن نام کاربری افراد هنگام ورود به یک وب‌سایت است. فضای سفید اضافه در موقعیت‌های بسیار ساده‌تر هم ممکن است سردرگم کننده باشد. خوشبختانه، پایتون به راحتی به شما امکان می‌دهد که فضای سفید اضافه را از ورودی‌هایی که افراد وارد می‌کنند، پاک کنید.</p>
                            <p>پایتون می‌تواند وجود فضای سفید اضافه در سمت راست و چپ یک رشته را وارسی کند. برای اینکه مطمئن شوید که در طرف راست رشته فضای سفید وجود ندارد، از متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">rstrip()</span><span class="rlm">‏</span> استفاده کنید.</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr"><span class="n" dir="ltr">1</span>&gt;&gt;&gt; <span class="bo">favorite_language = 'python '</span>
<span class="n" dir="ltr">2</span>&gt;&gt;&gt; <span class="bo">favorite_language</span>
'python '
<span class="n" dir="ltr">3</span>&gt;&gt;&gt; <span class="bo">favorite_language.rstrip()</span>
'python'
<span class="n" dir="ltr">4</span>&gt;&gt;&gt; <span class="bo">favorite_language</span>
'python '</pre>
                            </div>
                            <p>مقدار مرتبط با <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">favorite_language</span><span class="rlm">‏</span> در <span class="n" dir="ltr">1</span> حاوی فضای سفید اضافه در پایان رشته است. وقتی که مقدار آن را در ترمینال از پایتون می‌پرسید، می‌توانید فاصله را در پایان مقدار آن در <span class="n" dir="ltr">2</span> ببینید. وقتی که متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">rstrip()</span><span class="rlm">‏</span> روی مقدار <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">favorite_language</span><span class="rlm">‏</span> در <span class="n" dir="ltr">3</span> عمل می‌کند، این فضای اضافه حذف می‌شود. با این حال، فقط به‌صورت موقتی برداشته می‌شود. اگر مقدار <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">favorite_language</span><span class="rlm">‏</span> را دوباره بپرسید، می‌بینید رشته دوباره به همان صورت است، و آخر آن فضای سفید اضافه دارد <span class="n" dir="ltr">4</span>.</p>
                            <p>اگر بخواهید فضای سفید اضافه را به‌طور دایمی از رشته حذف کنید، باید رشته‌ی اصلاح شده را به نام متغیر اختصاص دهید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">favorite_language = 'python '</span>
<span class="n" dir="ltr">1</span>&gt;&gt;&gt; <span class="bo">favorite_language = favorite_language.rstrip()</span>
&gt;&gt;&gt; <span class="bo">favorite_language</span>
'python'</pre>
                            </div>
                            <p>برای حذف فضای سفید از رشته، فضای سفید را از طرف راست رشته برمی‌دارید و سپس این مقدار جدید را به متغیر اولیه اختصاص می‌دهید، همان گونه که در <span class="n" dir="ltr">1</span> نشان داده شده است. تغییر دادن مقدار متغیر کاری است که در برنامه‌نویسی زیاد انجام می‌شود. در حین اجرای برنامه و یا در پاسخ به ورودی کاربر، با این روش می‌توان مقدار متغیر را روزآمد کرد.</p>
                            <p>فضای سفید را از طرف راست رشته نیز می‌توانید با استفاده از متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">lstrip()</span><span class="rlm">‏</span> حذف کنید، و یا اینکه فضای سفید هر دو طرف را با متد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">strip()</span><span class="rlm">‏</span> می‌توانید حذف نمایید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr"><span class="n" dir="ltr">1</span>&gt;&gt;&gt; <span class="bo">favorite_language = ' python '</span>
<span class="n" dir="ltr">2</span>&gt;&gt;&gt; <span class="bo">favorite_language.rstrip()</span>
' python'
<span class="n" dir="ltr">3</span>&gt;&gt;&gt; <span class="bo">favorite_language.lstrip()</span>
'python '
<span class="n" dir="ltr">4</span>&gt;&gt;&gt; <span class="bo">favorite_language.strip()</span>
'python'</pre>
                            </div><a id="p024"></a>
                            <p>در این مثال، ابتدا مقداری داریم که در اول و آخر آن فضای سفید دارد <span class="n" dir="ltr">1</span>. سپس در <span class="n" dir="ltr">2</span> فضای سفید اضافه را از طرف راست، و در <span class="n" dir="ltr">3</span> از طرف چپ آن حذف می‌کنیم. در <span class="n" dir="ltr">4</span>، فضای سفید را از هر دو طرف آن حذف می‌نماییم. استفاده از این توابع حذف‌کننده‌ی فضای سفید به شما امکان می‌دهد که در کار با رشته‌ها مهارت پیدا کنید. در دنیای واقعی، این توابع حذف‌کننده‌ی فضای سفید عموماً برای پاک‌سازی ورودی کاربر قبل از ذخیره‌سازی آن در برنامه استفاده می‌شود:</p>
                        </div>
                        <div class="sect" id="ch02lev2sec8"><a class="bkmk" name="ch02lev2sec8"></a>
                            <h4>اجتناب از خطاهای نحوی در ارتباط با رشته‌ها</h4>
                            <p>یک نوع خطا که احتمالاً زیاد خواهید دید، خطای نحوی (<span class="rlm">‏</span><span class="lr" dir="ltr">syntax error</span><span class="rlm">‏</span>) است. <span class="emphasis">خطای نحوی</span> زمانی روی می‌دهد که پایتون بخشی از برنامه‌ی شما را به‌عنوان کد صحیح پایتون قبول نکند. مثلاً اگر داخل رشته‌ای که با علامت نقل‌قول یکه نوشته شده است، یک آپوستروف بگذارید، این کار موجب خطا خواهد شد. علت آن است که پایتون نویسه‌هایی را که بین علامت نقل‌قول اول و آپوستروف قرار گرفته است، به‌عنوان رشته در نظر می‌گیرد. بعد سعی می‌کند بقیه‌ی متن را به‌عنوان کد پایتون تفسیر کند که با خطا مواجه می‌شود.</p>
                            <p>نحوه‌ی استفاده‌ی صحیح از علامت نقل‌قول یکه و دوتایی را در اینجا توضیح می‌دهیم. این برنامه را با نام <span class="rlm">‏</span><span class="ident" dir="ltr">apostrophe.py</span><span class="rlm">‏</span> ذخیره کنید و سپس آن را اجرا کنید:</p>
                            <div class="snippet">
                                <div class="snippet-title" dir="ltr">apostrophe.py</div>
                                <pre class="snippet" dir="ltr">message = "One of Python's strengths is its diverse community."
print(message)</pre>
                            </div>
                            <p>آپوستروف در داخل علامت‌های نقل‌قول دوتایی قرار داده شده است، بنابراین، تفسیرگر پایتون مشکلی در خواندن رشته به‌صورت صحیح ندارد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">One of Python's strengths is its diverse community.</pre>
                            </div>
                            <p>اما اگر از علامت نقل‌قول یکه استفاده کنید، پایتون نمی‌تواند مشخص کند که رشته در کجا تمام می‌شود:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">message = 'One of Python's strengths is its diverse community.'
<span class="ash">print(message)</span></pre>
                            </div>
                            <p>در این صورت، خروجی زیر را خواهید دید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">  File "apostrophe.py", line 1
    message = 'One of Python's strengths is its diverse community.'
                             ^<span class="n inline" dir="ltr">1</span>
SyntaxError: invalid syntax</pre>
                            </div>
                            <p>در خروجی مشاهده می‌کنید که خطا در <span class="n" dir="ltr">1</span> رخ داده است، درست بعد از دومین علامت نقل‌قول. این خطای نحوی نشان می‌دهد که تفسیرگر قسمتی از کد را به‌عنوان کد صحیح پایتون تشخیص نمی‌دهد. خطاها ممکن است از منابع مختلفی حاصل شود، و در اینجا برخی از موارد شایع آن‌ها را بیان می‌کنیم. شما ممکن است در مدتی که نحوه‌ی نوشتن کد صحیح پایتون را یاد می‌گیرید، مکرراً با خطاهای نحوی برخورد داشته باشید. ضمن اینکه خطاهای نحوی نسبت به انواع دیگر خطا زیاد اختصاصی نیستند، بنابراین، شناسایی و اصلاح آن‌ها ممکن است دشوار یا دلسرد کننده باشد. اگر در خطای سرسختی گیر کردید، به پیشنهادات ارائه شده در <span class="ref"><a href="c39-appc.xhtml">ضمیمه‌ی پ</a></span> مراجعه کنید.</p><a id="p025"></a>
                            <div class="note">
                                <h6 class="note-title">توجه</h6>
                                <p>قابلیت هایلایت نحوی در ویرایشگر متنی شما ممکن است به پیدا کردن خطاهای نحوی در حین نوشتن کد کمک کند. مثلاً اگر دیدید که کد پایتون مانند متن معمولی هایلایت شده یا بر عکس، احتمالاً نشان‌دهنده‌ی آن است که جایی در فایلتان یک علامت نقل‌قول کم یا زیاد گذاشته‌اید.</p>
                            </div>
                        </div>
                        <div class="sidebar">
                            <h6 class="sidebar-title">خودتان امتحان کنید</h6>
                            <p>هر کدام از تمرینات زیر را به‌صورت فایلی جداگانه با نامی مانند <span class="rlm">‏</span><span class="ident" dir="ltr">name_cases.py</span><span class="rlm">‏</span> ذخیره کنید. اگر جایی گیر کردید، نفسی تازه کنید و به توصیه‌های ارائه شده در <span class="ref"><a href="c39-appc.xhtml">ضمیمه‌ی پ</a></span> نیز مراجعه نمایید.</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy03"><span class="tiy-num">۲-۳</span>. <span class="tiy-title">پیام شخصی</span>: </span>با یک متغیر، نام یک شخص را نشان دهید، و پیامی را برای آن شخص نمایش دهید. پیام ساده‌ای باشد، مثلاً: «سلام، اریک، می‌خواهی امروز کمی پایتون یاد بگیری؟»</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy04"><span class="tiy-num">۲-۴</span>. <span class="tiy-title">حروف کوچک و بزرگ در نام اشخاص</span>: </span>با یک متغیر، نام یک شخص را نشان دهید، و نام او را با حروف کوچک (<span class="rlm">‏</span><span class="lr" dir="ltr">lowercase</span><span class="rlm">‏</span>)، حروف بزرگ (<span class="rlm">‏</span><span class="lr" dir="ltr">uppercase</span><span class="rlm">‏</span>)، و به حالت عنوان (<span class="rlm">‏</span><span class="lr" dir="ltr">title case</span><span class="rlm">‏</span>) نمایش دهید.</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy05"><span class="tiy-num">۲-۵</span>. <span class="tiy-title">نقل‌قول مشهور</span>: </span>نقل‌قولی از یک شخص مشهور مورد علاقه‌تان پیدا کنید. آن مطلب و نام گوینده‌ی آن را نمایش دهید. خروجی شما باید چیزی شبیه مورد زیر باشد، با همین علایم نقل‌قول:</p>
                            <p>quoteآلبرت اینشتین گفته است: "کسی که هرگز اشتباه نکرده، هرگز کار جدیدی را امتحان نکرده است."</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy06"><span class="tiy-num">۲-۶</span>. <span class="tiy-title">نقل‌قول مشهور ۲</span>: </span>مراحل ذکر شده در <span class="ref"><a href="c13-ch02.xhtml#ch02_tiy05">تمرین <span dir="ltr">۲-۵</span></a></span> را تکرار کنید، ولی این بار نام شخص مشهور را با متغیری به نام <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">famous_person</span><span class="rlm">‏</span> نشان دهید. سپس پیامتان را آماده کنید و آن را به متغیری به نام <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">message</span><span class="rlm">‏</span> اختصاص دهید. سرانجام، پیامتان را روی صفحه نمایش دهید.</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy07"><span class="tiy-num">۲-۷</span>. <span class="tiy-title">جدا کردن فضای سفید از نام‌ها</span>: </span>نام یک شخص را با یک متغیر نشان دهید، و در ابتدا و انتهای نام مقداری فضای سفید بگذارید. دقت کنید که از هر کدام از ترکیب‌های نویسه‌ای <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"\t"</span><span class="rlm">‏</span> و <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">"\n"</span><span class="rlm">‏</span> لااقل یک بار استفاده کنید.</p>
                            <p>نام را یک بار روی صفحه نمایش دهید، به‌طوری که فضای سفید اطراف نام نمایش داده شود. سپس نام را با به‌کارگیری هر کدام از سه تابع جدا کننده‌ی فضای سفید، <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">lstrip()</span><span class="rlm">‏</span>، <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">rstrip()</span><span class="rlm">‏</span>، و <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">strip()</span><span class="rlm">‏</span>، نمایش دهید.</p>
                        </div>
                    </div>
                    <div class="sect" id="ch02lev1sec4"><a class="bkmk" name="ch02lev1sec4"></a>
                        <h3>اعداد</h3>
                        <p>اعداد در برنامه‌نویسی خیلی زیاد به کار می‌روند، مثلاً برای محاسبه‌ی امتیاز بازی‌ها، نمایش داده‌ها در مصورسازی‌ها، ذخیره‌سازی اطلاعات در برنامه‌های تحت وب، و امثال این‌ها. پایتون اعداد را به چندین روش مختلف در نظر می‌گیرد، بسته به اینکه چگونه از آن‌ها استفاده می‌شود. ابتدا به نحوه‌ی کار با اعداد صحیح در پایتون نگاهی می‌اندازیم، چرا که کار کردن با آن‌ها از همه ساده‌تر است.</p>
                        <div class="sect" id="ch02lev2sec9"><a class="bkmk" name="ch02lev2sec9"></a>
                            <h4>اعداد صحیح</h4>
                            <p>شما در پایتون می‌توانید اعداد صحیح را جمع (<span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">+</span><span class="rlm">‏</span>)، تفریق (<span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">-</span><span class="rlm">‏</span>)، ضرب (<span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">*</span><span class="rlm">‏</span>)، یا تقسیم (<span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">/</span><span class="rlm">‏</span>) کنید.</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">2 + 3</span>
5
&gt;&gt;&gt; <span class="bo">3 – 2</span>
1
&gt;&gt;&gt; <span class="bo">2 * 3</span>
6
&gt;&gt;&gt; <span class="bo">3 / 2</span>
1.5</pre>
                            </div>
                            <p>در پنجره‌ی ترمینال، پایتون صرفاً نتیجه‌ی عمل را برمی‌گرداند. در پایتون، از دو علامت ضرب برای نشان دادن عمل توان استفاده می‌شود:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">3 ** 2</span>
9
&gt;&gt;&gt; <span class="bo">3 ** 3</span>
27
&gt;&gt;&gt; <span class="bo">10 ** 6</span>
1000000</pre>
                            </div>
                            <p>پایتون ترتیب عمل‌ها را هم پشتیبانی می‌کند، به‌طوری که می‌توانید چند عمل را در یک عبارت انجام دهید. به‌علاوه، می‌توانید از پرانتز برای تغییر دادن ترتیب عمل‌ها استفاده کنید، تا اینکه پایتون عبارت را به همان ترتیبی که معین می‌کنید، ارزیابی کند. به‌عنوان مثال:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">2 + 3*4</span>
14
&gt;&gt;&gt; <span class="bo">(2 + 3) * 4</span>
20
</pre>
                            </div>
                            <p>فضای سفید در این مثال‌های تأثیری در نحوه‌ی ارزیابی عبارت‌ها ندارد؛ صرفاً به شما کمک می‌کند که وقتی دارید کد را می‌خوانید، عمل‌هایی را که اولویت دارند، زودتر متوجه شوید.</p>
                        </div>
                        <div class="sect" id="ch02lev2sec10"><a class="bkmk" name="ch02lev2sec10"></a>
                            <h4>اعداد ممیز شناور</h4>
                            <p>در پایتون، اعداد اعشاری، اعداد <span class="emphasis">ممیز شناور</span> (<span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">float</span><span class="rlm">‏</span></span>) نامیده می‌شوند. این اصطلاح در اکثر زبان‌های برنامه‌نویسی استفاده می‌شود، و اشاره به این واقعیت دارد که ممیز در هر جایی از عدد می‌تواند قرار گیرد. هر زبان برنامه‌نویسی باید به دقت طراحی شود تا اعداد صرف نظر از اینکه ممیز آن‌ها کجا قرار گرفته باشد، رفتار مناسبی داشته باشند.</p><a id="p027"></a>
                            <p>اکثر اوقات می‌توانید از اعداد اعشاری استفاده کنید، بدون اینکه نگران نحوه‌ی رفتار آن‌ها باشید. صرفاً عددهایی را که می‌خواهید استفاده کنید، وارد کنید، تا پایتون کاری را انتظار دارید، انجام دهد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">0.1 + 0.1</span>
0.2
&gt;&gt;&gt; <span class="bo">0.2 + 0.2</span>
0.4
&gt;&gt;&gt; <span class="bo">2 * 0.1</span>
0.2
&gt;&gt;&gt; <span class="bo">2 * 0.2</span>
0.4</pre>
                            </div>
                            <p>با این حال، در نظر داشته باشید که گاه ممکن است جواب شما چندین رقم اعشاری داشته باشد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">0.2 + 0.1</span>
0.30000000000000004
&gt;&gt;&gt; <span class="bo">3 * 0.1</span>
0.30000000000000004</pre>
                            </div>
                            <p>این امر در تمام زبان‌ها اتفاق می‌افتد و اهمیت چندانی ندارد. پایتون تلاش می‌کند که راهی پیدا کند تا نتیجه را حتی‌الامکان به‌صورت دقیق نمایش دهد، که این به علت چگونگی نمایش داده شدن عددها در کامپیوتر، بعضی وقت‌ها کار مشکلی است. فعلاً شما از ارقام اعشاری اضافی چشم‌پوشی کنید؛ وقتی که در پروژه‌های <span class="ref"><a href="c23-p2.xhtml">بخش ۲</a></span> به آن نیاز داشته باشید، یاد خواهید گرفت که با این رقم‌های اضافه چکار کنید.</p>
                        </div>
                        <div class="sect" id="ch02lev2sec11"><a class="bkmk" name="ch02lev2sec11"></a>
                            <h4>اعداد صحیح و اعداد ممیز شناور</h4>
                            <p>وقتی که هر دو عددی را بر هم تقسیم کنید، ولو آنکه اعداد صحیحی باشند که حاصل تقسیم آن‌ها یک عدد صحیح می‌شود، در هر حال چیزی که به دست می‌آورید، یک عدد ممیز شناور خواهد بود:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">4/2</span>
2.0</pre>
                            </div>
                            <p>اگر یک عدد صحیح و یک عدد ممیز شناور را در هر عمل دیگری با هم ترکیب کنید، باز حاصل یک عدد ممیز شناور خواهد بود:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">1 + 2.0</span>
3.0
&gt;&gt;&gt; <span class="bo">2 * 3.0</span>
6.0
&gt;&gt;&gt; <span class="bo">3.0 ** 2</span>
9.0</pre>
                            </div>
                            <p>پایتون برای هر عملی که از ممیز شناور استفاده می‌کند، به‌طور پیش‌فرض ممیز شناور را در نظر می‌گیرد، ولو آنکه حاصل یک عدد صحیح باشد:</p>
                        </div>
                        <div class="sect" id="ch02lev2sec12"><a class="bkmk" name="ch02lev2sec12"></a>
                            <h4>زیرخط در اعداد</h4>
                            <p>وقتی که اعدادی با ارقام زیاد را می‌نویسید، می‌توانید رقم‌ها را با زیرخط دسته‌بندی کنید تا خواندن اعداد بزرگ راحت‌تر باشد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">universe_age = 14_000_000_000</span></pre>
                            </div>
                            <p>زمانی که عددی را که با زیرخط نوشته شده است، نمایش می‌دهید، پایتون فقط رقم‌ها را نمایش می‌دهد:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">print(universe_age)</span>
14000000000</pre>
                            </div>
                            <p>پایتون هنگام ذخیره کردن این‌گونه مقادیر، از زیرخط‌ها صرف نظر می‌کند. حتی اگر رقم‌ها را سه‌تا سه‌تا دسته‌بندی نکنید، مقدار تغییری نمی‌کند. از نظر پایتون، عدد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">1000</span><span class="rlm">‏</span> با عدد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">1_000</span><span class="rlm">‏</span> و نیز با عدد <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">10_00</span><span class="rlm">‏</span> یکسان است. این ویژگی برای اعداد صحیح و اعداد ممیز شناور قابل استفاده است، ولی فقط در پایتون ۳.۶ و بعد از آن وجود دارد.</p>
                        </div>
                        <div class="sect" id="ch02lev2sec13"><a class="bkmk" name="ch02lev2sec13"></a>
                            <h4>اختصاص چندگانه</h4>
                            <p>می‌توانید در یک سطر مقادیری را به بیش از یک متغیر اختصاص دهید. این می‌تواند برای کوتاه‌تر کردن برنامه مفیدتر باشد، و خواندن آن را هم آسان‌تر کند؛ غالباً از این تکنیک برای مقداردهی اولیه به چند عدد استفاده می‌شود.</p>
                            <p>مثلاً به‌صورت زیر می‌توانید به سه متغیر <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">x</span><span class="rlm">‏</span>، <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">y</span><span class="rlm">‏</span>، و <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">z</span><span class="rlm">‏</span> مقدار صفر را اختصاص دهید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">x, y, z = 0, 0, 0</span></pre>
                            </div>
                            <p>لازم است که نام متغیرها را با کاما از هم جدا کنید، و در مورد مقادیر هم همین کار را انجام دهید. به این ترتیب، پایتون هر مقدار را به متغیری که در همان جایگاه قرار گرفته است، اختصاص خواهد داد. مادام که تعداد مقادیر با تعداد متغیرها برابر باشد، پایتون اختصاص مقادیر را به‌صورت صحیح انجام خواهد داد.</p>
                        </div>
                        <div class="sect" id="ch02lev2sec14"><a class="bkmk" name="ch02lev2sec14"></a>
                            <h4>مقادیر ثابت</h4>
                            <p><span class="emphasis">ثابت</span> متغیری است که مقدار آن در سرتاسر عمر برنامه تغییر نمی‌کند. پایتون به‌طور پیش‌فرض نوع ثابت ندارد، ولی برنامه‌نویسان پایتون از متغیرهایی که نام آن‌ها کلاً با حروف بزرگ نوشته شده است، برای نشان دادن متغیری استفاده می‌کنند که باید به‌عنوان ثابت در نظر گرفته شود و تغییر نکند:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">MAX_CONNECTIONS = 5000</pre>
                            </div>
                            <p>وقتی که می‌خواهید متغیری را در برنامه‌تان به‌عنوان ثابت در نظر بگیرید، تمام حروف نام آن را با حروف بزرگ بنویسید.</p>
                        </div>
                        <div class="sidebar">
                            <h6 class="sidebar-title">خودتان امتحان کنید</h6>
                            <a id="p029"></a>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy08"><span class="tiy-num">۲-۸</span>. <span class="tiy-title">عدد هشت</span>: </span>عمل‌های جمع، تفریق، ضرب، و تقسیمی را بنویسید که حاصل هر کدام عدد ۸ شود. حتماً عمل‌ها را داخل فراخوانی <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">print()</span><span class="rlm">‏</span> بگذارید تا نتیجه‌ی آن نمایش داده شود. باید چهار سطر کد مانند زیر بنویسید:</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">print(5+3)</pre>
                            </div>
                            <p>خروجی شما باید به سادگی شامل چهار سطر باشد که در هر سطر عدد ۸ نوشته شده است.</p>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy09"><span class="tiy-num">۲-۹</span>. <span class="tiy-title">عدد محبوب</span>: </span>از یک متغیر برای نشان دادن عدد محبوب خود استفاده کنید. سپس با استفاده از آن متغیر، پیامی را ایجاد کنید که عدد محبوب شما را نمایش می‌دهد. پیام را چاپ کنید.</p>
                        </div>
                    </div>
                    <div class="sect" id="ch02lev1sec5"><a class="bkmk" name="ch02lev1sec5"></a>
                        <h3>توضیحات</h3>
                        <p>توضیح از ویژگی‌های بسیار سودمند در اکثر زبان‌های برنامه‌نویسی است. هر چیزی که تا اینجا در برنامه‌هایتان نوشتید، کد پایتون بود. ولی به تدریج که برنامه‌های شما بزرگ‌تر و پیچیده‌تر می‌شوند، باید یادداشت‌هایی را به برنامه اضافه کنید تا رویکرد شما برای حل مسئله را مشخص کنند. <span class="emphasis">توضیح</span> (<span class="emphasis"><span class="rlm">‏</span><span class="lr" dir="ltr">comment</span><span class="rlm">‏</span></span>) به شما امکان می‌دهد که یادداشت‌هایی را به زبان خودتان در داخل برنامه بنویسید.</p>
                        <div class="sect" id="ch02lev2sec15"><a class="bkmk" name="ch02lev2sec15"></a>
                            <h4>چگونه توضیح می‌نویسید؟</h4>
                            <p>در پایتون، نشانه‌ی هش (<span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">#</span><span class="rlm">‏</span>) نشان‌دهنده‌ی یک توضیح است. هر چیزی پس از نشانه‌ی هش در کد شما به‌وسیله‌ی تفسیرگر پایتون مورد چشم‌پوشی قرار می‌گیرد. به‌عنوان مثال:</p>
                            <div class="snippet">
                                <div class="snippet-title" dir="ltr">comment.py</div>
                                <pre class="snippet" dir="ltr"># Say hello to everyone.
print("Hello Python people!")</pre>
                            </div>
                            <p>پایتون از سطر اول چشم‌پوشی می‌کند و سطر دوم را اجرا می‌کند.</p>
                            <div class="snippet">
                                <pre class="snippet" dir="ltr">Hello Python people!</pre>
                            </div>
                        </div>
                        <div class="sect" id="ch02lev2sec16"><a class="bkmk" name="ch02lev2sec16"></a>
                            <h4>چه نوع توضیحاتی باید بنویسید؟</h4>
                            <p>علت اصلی نوشتن توضیحات، شرح دادن این است که کد شما چه کاری باید انجام دهد و چگونه این کار را انجام داده‌اید. وقتی که در وسط کار بر روی یک پروژه هستید، می‌فهمید که قطعات مختلف چگونه در کنار هم قرار می‌گیرند. ولی وقتی که پس از مدتی به سراغ یک پروژه می‌روید، احتمالاً برخی از جزئیات را فراموش <a id="p030"></a>کرده‌اید. همیشه می‌توانید تا مدتی کدتان را مطالعه کنید تا بفهمید که هر قطعه چه کاری را باید انجام دهد، ولی اگر توضیحات خوبی بنویسید، می‌توانید رویکردتان را به‌صورت واضحی بیان کنید تا در وقتتان صرفه‌جویی شود.</p>
                            <p>اگر می‌خواهید یک برنامه‌نویس حرفه‌ای شوید یا با برنامه‌نویسان دیگر همکاری کنید، باید توضیحات معنی‌داری بنویسید. امروزه اکثر برنامه‌ها با همکاری دیگران نوشته می‌شود، چه گروهی از کارکنان یک شرکت باشند و چه گروهی از افراد که با یکدیگر بر روی یک پروژه‌ی بازمتن همکاری می‌کنند. برنامه‌نویسان ماهر عموماً انتظار دارند که کد شما حاوی توضیح باشد، بنابراین، بهتر است از همین حالا عادت کنید که توضیحات روشنی به برنامه‌هایتان اضافه کنید. نوشتن توضیحات روشن و موجز در کد شما یکی از مفیدترین عادت‌هایی است که می‌توانید به‌عنوان یک برنامه‌نویس جدید کسب کنید.</p>
                            <p>وقتی که درباره‌ی نوشتن توضیح فکر می‌کنید، از خودتان بپرسید که آیا چندین راه برای انجام کار در پیش روی خود داشته‌اید که سرانجام به راه‌حل معقولی برای انجام کار رسیده‌اید؟ اگر این‌گونه است، توضیحی درباره‌ی راه‌حل خود بنویسید. خیلی راحت‌تر است که بعداً برگردید و توضیحات اضافه را پاک کنید، تا اینکه بعداً بخواهید برای برنامه‌ای که توضیحات کافی ندارد، توضیح بنویسید. از این به بعد، من در تمام مثال‌های این کتاب از توضیح استفاده خواهم کرد تا مفهوم کدها بهتر فهمیده شود.</p>
                        </div>
                        <div class="sidebar">
                            <h6 class="sidebar-title">خودتان امتحان کنید</h6>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy10"><span class="tiy-num">۲-۱۰</span>. <span class="tiy-title">افزودن توضیحات</span>: </span>دو برنامه را که نوشته‌اید، انتخاب کنید، و به هر کدام لااقل یک توضیح اضافه کنید. در صورتی که فعلاً به علت ساده بودن برنامه‌هایتان چیز خاصی برای نوشتن ندارید، صرفاً نام خودتان و تاریخ امروز را در بالای هر فایل برنامه اضافه کنید. سپس در یک جمله توضیح دهید که برنامه چه کاری انجام می‌دهد.</p>
                        </div>
                    </div>
                    <div class="sect" id="ch02lev1sec6"><a class="bkmk" name="ch02lev1sec6"></a>
                        <h3>ذن پایتون</h3>
                        <p>برنامه‌نویسان پیشرفته‌ی پایتون به شما خواهند گفت که بهتر است حتی‌الامکان کارها را پیچیده نکنید و هدفتان سادگی هرچه بیشتر باشد. فلسفه‌ی جامعه‌ی پایتون در مجموعه‌ای تحت عنوان «ذن پایتون» نوشته‌ی تیم پیترز (<span class="rlm">‏</span><span class="lr" dir="ltr">Tim Peters</span><span class="rlm">‏</span>) بیان شده است. برای دسترسی به این اصول کدنویسی خوب پایتون، دستور <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;">import this</span><span class="rlm">‏</span> را در تفسیرگر پایتون وارد کنید. البته من تمام اصول «ذن پایتون» را در اینجا تکرار نمی‌کنم، ولی چند سطر آن را بیان می‌کنم تا متوجه شوید که چرا باید به‌عنوان یک برنامه‌نویس مبتدی پایتون به آن‌ها اهمیت بدهید.</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">&gt;&gt;&gt; <span class="bo">import this</span>
The Zen of Python, by Tim Peters
Beautiful is better than ugly.</pre>
                        </div>
                        <p>«زیبا بهتر از زشت است.» برنامه‌نویسان پایتون به زیبایی کد خیلی اهمیت می‌دهند. در برنامه‌نویسی، کار برنامه‌نویسان حل کردن مسائل است. غالباً برنامه‌نویسان احترام زیادی برای راه‌حل‌های خوب طراحی شده، کارا، و حتی زیبا برای <a id="p031"></a>مسائل قائل هستند. کم‌کم که چیزهای بیشتری درباره‌ی پایتون یاد می‌گیرید و از آن برای کدنویسی استفاده می‌کنید، شاید کسی به برنامه‌های شما نگاه کند و بگوید: «به‌به، چه کد زیبایی نوشته‌اید!»</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Simple is better than complex.</pre>
                        </div>
                        <p>«ساده بهتر از پیچیده است.» اگر بخواهید بین دو راه‌حل ساده و پیچیده، که هر دو مؤثر است، یکی را انتخاب کنید، راه‌حل ساده را انتخاب کنید. هم نگهداری کد شما آسان‌تر خواهد بود، و هم بعداً برای خودتان و دیگران راحت‌تر خواهد بود که بر مبنای آن کدهای دیگری بنویسید.</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Complex is better than complicated.</pre>
                        </div>
                        <p>«پیچیده بهتر از غامض است.» زندگی واقعی پر از گرفتاری است و بعضی وقت‌ها راه‌حل ساده‌ای برای مسئله پیدا نمی‌شود. در این حالت، از ساده‌ترین راه‌حلی که مؤثر است، استفاده کنید.</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Readability counts.</pre>
                        </div>
                        <p>«خوانایی مهم است.» حتی وقتی که کد شما پیچیده است، سعی کنید آن را خوانا بنویسید. وقتی که روی پروژه‌ای کار می‌کنید که نیاز به کدنویسی‌های پیچیده‌ای دارد، سعی کنید توضیحات مفیدی برای آن کد بنویسید.</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">There should be one-- and preferably only one --obvious way to do it.</pre>
                        </div>
                        <p>«باید یک—و ترجیحاً فقط یک—راهِ واضح برای انجام کار وجود داشته باشد.» اگر از دو برنامه‌نویس پایتون خواسته شود که مسئله‌ی یکسانی را حل کنند، باید هر دو راه‌حل‌های نسبتاً سازگاری برای آن پیدا کنند. البته منظور آن نیست که در برنامه‌نویسی جایی برای خلاقیت نیست. بر عکس! ولی قسمت زیادی از کار برنامه‌نویسی، استفاده از رویکردهای کوچک و معمولی برای موقعیت‌های ساده در قالب یک پروژه‌ی بزرگ‌تر و خلاقانه‌تر است. پیچ و مهره‌ی برنامه‌های شما باید برای برنامه‌نویسان پایتون معنی‌دار باشد.</p>
                        <div class="snippet">
                            <pre class="snippet" dir="ltr">Now is better than never.</pre>
                        </div>
                        <p>«حالا بهتر از هیچ‌وقت است.» شاید بقیه‌ی عمرتان را صرف یاد گرفتن تمام ظرایف زبان پایتون و کلاً برنامه‌نویسی کنید، ولی در این صورت هیچ پروژه‌ای را کامل نخواهید کرد. نباید سعی‌تان این باشد که برنامه‌ی کامل و بی‌عیب‌ونقصی بنویسد؛ سعی کنید کدی بنویسید که کار کند، و بعد تصمیم بگیرید که آیا کد را برای همان پروژه بهبود ببخشید یا اینکه به سراغ کار جدیدی بروید.</p>
                        <p>اکنون که می‌خواهید به فصل بعد بروید و به خواندن مطالب عمیق‌تر بپردازید، سعی کنید فلسفه‌ی سادگی و وضوح را در ذهن داشته باشید. در این صورت، برنامه‌نویسان باتجربه احترام بیشتری برای کد شما قائل خواهند بود و با خوشحالی برایتان نظر خواهند داد و در پروژه‌های جالب با شما همکاری خواهند کرد.</p>
                        <div class="sidebar">
                            <h6 class="sidebar-title">خودتان امتحان کنید</h6>
                            <p class="tiy1"><span class="tiy" id="ch02_tiy11"><span class="tiy-num">۲-۱۱</span>. <span class="tiy-title">ذن پایتون</span>: </span>دستور <span class="rlm">‏</span><span class="literal" dir="ltr" style="direction: ltr;"><span class="bo">import this</span></span><span class="rlm">‏</span> را در ترمینال وارد کنید و به بقیه‌ی اصول هم نگاهی بیندازید.</p>
                        </div>
                    </div>
                    <div class="sect" id="ch02lev1sec7"><a class="bkmk" name="ch02lev1sec7"></a>
                        <h3>خلاصه</h3>
                        <p>در این فصل، کار با متغیرها را یاد گرفتید. یاد گرفتید که برای متغیرها نام‌های معنی‌داری بگذارید و در صورت بروز خطاهای نام و خطاهای نحوی چگونه آن را برطرف کنید. یاد گرفتید که رشته یعنی چه و چگونه می‌توانید با استفاده از متدهای حروف کوچک، حروف بزرگ، و حروف عنوان، رشته‌ها را نمایش دهید. برای مرتب کردن خروجی برنامه‌ی خود از فضای سفید استفاده کردید، و این را هم یاد گرفتید که چگونه فضای سفید ناخواسته را از اول یا آخر رشته جدا کنید. کمی هم با اعداد صحیح و اعداد ممیز شناور کار کردید، و روش‌هایی را برای کار با داده‌های عددی یاد گرفتید. هم‌چنین، یاد گرفتید که توضیحات معنی‌داری بنویسید تا خواندن کد برای خودتان و دیگران آسان‌تر باشد. و سرانجام، یاد گرفتید که تا جایی می‌توانید، کد را حتی‌الامکان ساده‌تر بنویسید.</p>
                        <p>در <span class="ref"><a href="c14-ch03.xhtml">فصل ۳</a></span>، ذخیره کردن مجموعه‌ای از اطلاعات در یک <span class="emphasis">لیست</span> را یاد خواهید گرفت. خواهید آموخت که به عناصر لیست دسترسی پیدا کنید و اطلاعات درون آن را تغییر دهید.</p>
                    </div>
                </div>
                <div class="row pager">
                    <div class="col-md-5 text-center text-md-left pager-prev"><a href="c12-ch01.xhtml"><span><span>فصل ۱</span>: <span>شروع کار</span></span></a></div>
                    <div class="col-md-2 text-center pager-title"><a href="c01-cover.xhtml">آغاز</a></div>
                    <div class="col-md-5 text-center text-md-right pager-next"><a href="c14-ch03.xhtml"><span><span>فصل ۳</span>: <span>آشنایی با لیست‌ها</span></span></a></div>
                </div>
            </main>
            <aside class="col-md-2 order-md-first">
                <ul class="nav nav-pills flex-column">
                    <li class="nav-item"><a class="nav-link" href="../">دورهٔ فشردهٔ پایتون</a></li>
                    <li class="nav-item"><a class="nav-link" href="c06-toc.xhtml">فهرست</a></li>
                </ul><a title="GDPR-compliant Web Analytics" target="_blank" href="https://clicky.com/undefined"><img alt="Clicky" src="https://static.getclicky.com/media/links/badge.gif" border="0" /></a>
                <script async="async" src="https://static.getclicky.com/js" data-id="undefined"></script>
            </aside>
        </div>
    </div>
    <div class="container">
        <div id="footer" class="row">
            <div class="col-sm-6">
                <p><span>© ۱۴۰۰، قاسم کیانی مقدم.</span></p>
            </div>
            <div class="col-sm-6">
                <p class="text-right"><span><a target="_blank" rel="me" href="https://linkedin.com/in/ghasemkiani" title="لینکدین"><span class="fab fa-linkedin"></span></a></span><span> </span><span><a target="_blank" rel="me" href="https://github.com/ghasemkiani" title="گیت‌هاب"><span class="fab fa-github"></span></a></span><span> </span><span><a target="_blank" rel="me" href="https://twitter.com/ghasemkiani" title="توئیتر"><span class="fab fa-twitter"></span></a></span><span> </span><span><a target="_blank" rel="me" href="https://facebook.com/ghasemkiani" title="فیس‌بوک"><span class="fab fa-facebook"></span></a></span><span> </span><span><a target="_blank" rel="me" href="https://telegram.me/ghasemkiani" title="تلگرام"><span class="fab fa-telegram"></span></a></span><span> </span><span><a target="_blank" rel="me" href="https://instagram.com/ghasem.kiani" title="اینستاگرام"><span class="fab fa-instagram"></span></a></span><span> </span><span><a target="_blank" rel="me" href="https://mastodon.social/@ghasemkiani" title="ماستودون"><span class="fab fa-mastodon"></span></a></span></p>
            </div>
        </div>
    </div>
    <script crossorigin="anonymous" src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"></script>
    <script crossorigin="anonymous" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"></script>
    <script crossorigin="anonymous" src="https://cdn.rtlcss.com/bootstrap/v4.0.0/js/bootstrap.min.js" integrity="sha384-54+cucJ4QbVb99v8dcttx/0JRx4FHMmhOWi4W+xrXpKcsKQodCBwAvu3xxkZAwsH"></script>
</body>

</html>